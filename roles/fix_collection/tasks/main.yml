---
- name: debug
  ansible.builtin.debug:
    var: ah_collections
    verbosity: 2

- name: update ah_collections
  ansible.builtin.set_fact:
    ah_collections_custom: "{{ (ah_collections_custom | default([])) + [item] }}"
  when: '"redhat-cop" in item.git_url'
  loop: "{{ ah_collections }}"

- name: debug
  ansible.builtin.debug:
    var: ah_collections_custom
    verbosity: 2

- name: update ah_collections
  ansible.builtin.set_fact:
    ah_collections: []

- name: Git checkout
  ansible.builtin.git:
    repo:     "{{ __ah_collection_item.git_url }}"
    dest:     "{{ ah_configuration_working_dir }}/{{ __ah_collection_item.collection_name }}/"
    version:  "{{ __ah_collection_item.version | default(omit) }}"
    key_file: "{{ __ah_collection_item.key_path | default(omit) }}"
    ssh_opts: "{{ __ah_collection_item.ssh_opts | default(omit) }}"
  loop: "{{ ah_collections_custom }}"
  loop_control:
    loop_var: "__ah_collection_item"

- name: get latest release numbers
  ansible.builtin.uri:
    url: "https://api.github.com/repos/redhat-cop/{{ __ah_collection_item.collection_name }}/releases"
    return_content: yes
  register: r_releases
  loop: "{{ ah_collections_custom }}"
  loop_control:
    loop_var: "__ah_collection_item"

- name: set fact
  ansible.builtin.set_fact:
    name_version: "{{ (name_version | default([])) + [{'name' : __name, 'version' : __version}] }}"
  vars:
    # __name: "ah_configuration"
    # __version: "v0.8.1"
    __name: "{{ item['__ah_collection_item']['collection_name'] }}"
    __version: "{{ item['json'][0]['tag_name'] }}"
  loop: "{{ r_releases['results'] }}"

- name: debug
  ansible.builtin.debug:
    var: name_version
    verbosity: 2

- name: debug
  ansible.builtin.debug:
    msg:
      - "{{ collection_repo }}"
      - "{{ collection_namespace }}"
      - "{{ collection_version }}"
      - "{{ __digits[0] }}"
      - "{{ __digits[1] }}"
      - "{{ __digits[2] }}"
      - "{{ __new_last_digit }}"
      - "{{ __digits }}"
    verbosity: 1
  vars:
    collection_repo: "{{ collection_namespace }}/{{ collection_name }}"
    collection_namespace: "redhat_cop"
    collection_name: "{{ item['name'] }}"
    collection_version: "{{ __digits[0] }}.{{ __digits[1] }}.{{ __new_last_digit }}"
    __new_last_digit: "{{ (__digits[2] | int) + 1 }}"
    __digits: "{{ (item['version'] | regex_replace('[^0-9\\.]')) | split('.') }}"
  loop: "{{ name_version }}"

- name: pull galaxy.yml.j2
  ansible.builtin.fetch:
    src: "/var/tmp/{{ collection_name }}/galaxy.yml.j2"
    dest: "/var/tmp/{{ collection_name }}/"
    flat: true
  vars:
    collection_repo: "{{ collection_namespace }}/{{ collection_name }}"
    collection_namespace: "redhat_cop"
    collection_name: "{{ item['name'] }}"
    collection_version: "{{ __digits[0] }}.{{ __digits[1] }}.{{ __new_last_digit }}"
    __new_last_digit: "{{ (__digits[2] | int) + 1 }}"
    __digits: "{{ (item['version'] | regex_replace('[^0-9\\.]')) | split('.') }}"
  loop: "{{ name_version }}"

- name: update galaxy.yml.j2
  ansible.builtin.template:
    src: "/var/tmp/{{ collection_name }}/galaxy.yml.j2"
    dest: "/var/tmp/{{ collection_name }}/galaxy.yml"
  vars:
    collection_repo: "{{ collection_namespace }}/{{ collection_name }}"
    collection_namespace: "redhat_cop"
    collection_name: "{{ item['name'] }}"
    collection_version: "{{ __digits[0] }}.{{ __digits[1] }}.{{ __new_last_digit }}"
    __new_last_digit: "{{ (__digits[2] | int) + 1 }}"
    __digits: "{{ (item['version'] | regex_replace('[^0-9\\.]')) | split('.') }}"
  loop: "{{ name_version }}"

- name: update ah_collections
  ansible.builtin.set_fact:
    ah_collections: "{{ (ah_collections | default([])) + [{'collection_name' : __name, 'collection_local_path' : __path}] }}"
  vars:
    __path: "/var/tmp/{{ item['collection_name'] }}"
    __name: "{{ item['collection_name'] }}"
  loop: "{{ ah_collections_custom }}"

- name: debug
  ansible.builtin.debug:
    var: ah_collections
    verbosity: 2
...